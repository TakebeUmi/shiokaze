#!/usr/bin/env python
#
#	resources/liquid/wscript
#
#	This is part of Shiokaze, a research-oriented fluid solver for computer graphics.
#	Created by Ryoichi Ando <rand@nii.ac.jp> on Sep 13, 2017.
#
#	Permission is hereby granted, free of charge, to any person obtaining a copy of
#	this software and associated documentation files (the "Software"), to deal in
#	the Software without restriction, including without limitation the rights to use,
#	copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the
#	Software, and to permit persons to whom the Software is furnished to do so,
#	subject to the following conditions:
#
#	The above copyright notice and this permission notice shall be included in all copies
#	or substantial portions of the Software.
#
#	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
#	INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
#	PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
#	HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
#	CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
#	OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
def build(bld):
	#
	bld.shlib(source = 'waterdrop2.cpp',
			target = bld.get_lib_name(bld,'waterdrop2'),
			cxxflags = ['-Wno-return-type-c-linkage'],
			use = bld.get_target_name(bld,'core'))
	#
	bld.shlib(source = 'waterdrop3.cpp',
			target = bld.get_lib_name(bld,'waterdrop3'),
			cxxflags = ['-Wno-return-type-c-linkage'],
			use = bld.get_target_name(bld,'core'))
	#
	bld.shlib(source = 'cube2.cpp',
			target = bld.get_lib_name(bld,'cube2'),
			cxxflags = ['-Wno-return-type-c-linkage'],
			use = bld.get_target_name(bld,'core'))
	#
	bld.shlib(source = 'cube3.cpp',
			target = bld.get_lib_name(bld,'cube3'),
			cxxflags = ['-Wno-return-type-c-linkage'],
			use = bld.get_target_name(bld,'core'))
	#
	bld.shlib(source = 'dambreak2.cpp',
			target = bld.get_lib_name(bld,'dambreak2'),
			cxxflags = ['-Wno-return-type-c-linkage'],
			use = bld.get_target_name(bld,'core'))
	#
	bld.shlib(source = 'dambreak3.cpp',
			target = bld.get_lib_name(bld,'dambreak3'),
			cxxflags = ['-Wno-return-type-c-linkage'],
			use = bld.get_target_name(bld,'core'))
	#
	bld.shlib(source = 'cylinders3.cpp',
			target = bld.get_lib_name(bld,'cylinders3'),
			cxxflags = ['-Wno-return-type-c-linkage'],
			use = bld.get_target_name(bld,'core'))
	#
	bld.shlib(source = 'stanfordparty3.cpp',
			target = bld.get_lib_name(bld,'stanfordparty3'),
			cxxflags = ['-Wno-return-type-c-linkage'],
			use = bld.get_target_name(bld,'core'))
	#
	bld.shlib(source = 'glugging2.cpp',
			target = bld.get_lib_name(bld,'glugging2'),
			cxxflags = ['-Wno-return-type-c-linkage'],
			use = bld.get_target_name(bld,'core'))
	#
	bld.shlib(source = 'glugging3.cpp',
			target = bld.get_lib_name(bld,'glugging3'),
			cxxflags = ['-Wno-return-type-c-linkage'],
			use = bld.get_target_name(bld,'core'))
	#
	bld.shlib(source = 'tiltedliquid3.cpp',
			target = bld.get_lib_name(bld,'tiltedliquid3'),
			cxxflags = ['-Wno-return-type-c-linkage'],
			use = bld.get_target_name(bld,'core'))
	#
	bld.shlib(source = 'tiltedliquid2.cpp',
			target = bld.get_lib_name(bld,'tiltedliquid2'),
			cxxflags = ['-Wno-return-type-c-linkage'],
			use = bld.get_target_name(bld,'core'))
	#
	bld.shlib(source = 'filmliquid2.cpp',
			target = bld.get_lib_name(bld,'filmliquid2'),
			cxxflags = ['-Wno-return-type-c-linkage'],
			use = bld.get_target_name(bld,'core'))
	#
	bld.shlib(source = 'filmliquid3.cpp',
			target = bld.get_lib_name(bld,'filmliquid3'),
			cxxflags = ['-Wno-return-type-c-linkage'],
			use = bld.get_target_name(bld,'core'))
	#
	bld.shlib(source = 'injection2.cpp',
			target = bld.get_lib_name(bld,'injection2'),
			cxxflags = ['-Wno-return-type-c-linkage'],
			use = bld.get_target_name(bld,'core'))
	#
	bld.shlib(source = 'injection3.cpp',
			target = bld.get_lib_name(bld,'injection3'),
			cxxflags = ['-Wno-return-type-c-linkage'],
			use = bld.get_target_name(bld,'core'))
    
    #
	bld.shlib(source = 'rain2.cpp',
			target = bld.get_lib_name(bld,'rain2'),
			cxxflags = ['-Wno-return-type-c-linkage'],
			use = bld.get_target_name(bld,'core'))
	#
	bld.shlib(source = 'rain3.cpp',
			target = bld.get_lib_name(bld,'rain3'),
			cxxflags = ['-Wno-return-type-c-linkage'],
			use = bld.get_target_name(bld,'core'))
	#
	bld.shlib(source = 'movingsolid2.cpp',
			target = bld.get_lib_name(bld,'movingsolid2'),
			cxxflags = ['-Wno-return-type-c-linkage'],
			use = bld.get_target_name(bld,'core'))
	#
	bld.shlib(source = 'throw2.cpp',
			target = bld.get_lib_name(bld,'throw2'),
			cxxflags = ['-Wno-return-type-c-linkage'],
			use = bld.get_target_name(bld,'core'))
	#
	bld.shlib(source = 'throw3.cpp',
			target = bld.get_lib_name(bld,'throw3'),
			cxxflags = ['-Wno-return-type-c-linkage'],
			use = bld.get_target_name(bld,'core'))
	#
	bld.shlib(source = 'movingsolid3.cpp',
			target = bld.get_lib_name(bld,'movingsolid3'),
			cxxflags = ['-Wno-return-type-c-linkage'],
			use = bld.get_target_name(bld,'core'))
	#
	bld.shlib(source = 'seaplane3.cpp',
			target = bld.get_lib_name(bld,'seaplane3'),
			cxxflags = ['-Wno-return-type-c-linkage'],
			use = bld.get_target_name(bld,'core'))
	#
	bld.shlib(source = 'river2.cpp',
			target = bld.get_lib_name(bld,'river2'),
			cxxflags = ['-Wno-return-type-c-linkage'],
			use = bld.get_target_name(bld,'core'))
	#
	bld.shlib(source = 'river3.cpp',
			target = bld.get_lib_name(bld,'river3'),
			cxxflags = ['-Wno-return-type-c-linkage'],
			use = bld.get_target_name(bld,'core'))
	
	bld.shlib(source = 'dambreak3_2.cpp',
            target = 'dambreak3'+bld.env.suffix,
            cxxflags = ['-Wno-return-type-c-linkage'],
            use = bld.get_target_name(bld,'core'))